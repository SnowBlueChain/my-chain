package gui.items.accounts;


import java.awt.GridBagConstraints;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;

import org.json.simple.JSONObject;
import org.json.simple.JSONValue;
import org.mapdb.Fun.Tuple2;

import controller.Controller;
import database.wallet.AccountsPropertisMap;
import gui.PasswordPane;
import lang.Lang;
import utils.StrJSonFine;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Саша
 */
public class Account_Set_Name_Dialog extends javax.swing.JDialog {

    /**
     * Creates new form Account_Show
     */
	
	private Account_Set_Name_Dialog th; 
	private String account;
	AccountsPropertisMap db = Controller.getInstance().wallet.database.getAccountsPropertisMap();
    public Account_Set_Name_Dialog(String adr) {
        super();
        th = this;
        account = adr;
        
        if(!Controller.getInstance().isWalletUnlocked())
		{
			//ASK FOR PASSWORD
			String password = PasswordPane.showUnlockWalletDialog(this);
			if(password.equals(""))
			{
				this.jButton_OK.setEnabled(true);
				return;
			}
			if(!Controller.getInstance().unlockWallet(password))
			{
				//WRONG PASSWORD
				JOptionPane.showMessageDialog(null, Lang.getInstance().translate("Invalid password"), Lang.getInstance().translate("Unlock Wallet"), JOptionPane.ERROR_MESSAGE);

				//ENABLE
				this.jButton_OK.setEnabled(true);
				return;
			}
		}
        
        
        
        List<Image> icons = new ArrayList<Image>();
		icons.add(Toolkit.getDefaultToolkit().getImage("images/icons/icon16.png"));
		icons.add(Toolkit.getDefaultToolkit().getImage("images/icons/icon32.png"));
		icons.add(Toolkit.getDefaultToolkit().getImage("images/icons/icon64.png"));
		icons.add(Toolkit.getDefaultToolkit().getImage("images/icons/icon128.png"));
		this.setIconImages(icons);
        initComponents();
        ansver.put("type", "cancel");
     // account in db?
		if (db.contains(account)){
			// read json
			Tuple2<String, String> ss = db.get(account);
			ansver = (JSONObject) JSONValue.parse(ss.b);
			ansver =	ansver == null ? new JSONObject() : ansver;
			// set papams
			th.jTextField_Name.setText(db.get(account).a);
			th.jTextArea_Description.setText("");
			if (ansver.containsKey("description")){
			th.jTextArea_Description.setText((String) ansver.get("description"));
			}
		}
    
        jButton_OK.addActionListener(new ActionListener(){
        	
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				String name = th.jTextField_Name.getText();
				String desc = th.jTextArea_Description.getText();
				JSONObject ans = new JSONObject();
				
				// account in db?
				
			if(name.length() ==0 && desc.length()==0) 
			{
				db.delete(account);
				setVisible(false);
				return;
			}
			else if(name.length()==0){
				name ="";
			};
			
			
			if(desc.length()!=0){
				// write description
				ans.put("description", desc);
				
			}
			db.set(account, new Tuple2(name,StrJSonFine.convert(ans)));
            setVisible(false);
            //dispose();
			}
        	
        });
        
        
        jButton_Cancel.addActionListener(new ActionListener(){
        	
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
				ansver.put("type", "cancel");
				setVisible(false);
			}
        	
        });
    
        pack();
        this.setLocationRelativeTo(null);
        setModal(true);
        this.setVisible(true);
        
    
    }
    

 
   
        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents() {
            java.awt.GridBagConstraints gridBagConstraints;

            jLabel_Title = new javax.swing.JLabel();
            jLabel_Name = new javax.swing.JLabel();
            jTextField_Name = new javax.swing.JTextField();
            jScrollPane2 = new javax.swing.JScrollPane();
            jTextArea_Description = new javax.swing.JTextArea();
            jPanel1 = new javax.swing.JPanel();
            jButton_OK = new javax.swing.JButton();
            jButton_Cancel = new javax.swing.JButton();
            jLabel_Description = new javax.swing.JLabel();
            ansver = new JSONObject();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
            layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
            layout.rowHeights = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
            getContentPane().setLayout(layout);

            jLabel_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel_Title.setText(Lang.getInstance().translate("Set Name Account") + ":" + account);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.gridwidth = 5;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
            getContentPane().add(jLabel_Title, gridBagConstraints);

            jLabel_Name.setText(Lang.getInstance().translate("Name"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            getContentPane().add(jLabel_Name, gridBagConstraints);

            jTextField_Name.setToolTipText("");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 2;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.weightx = 0.3;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            getContentPane().add(jTextField_Name, gridBagConstraints);

            jTextArea_Description.setColumns(20);
            jTextArea_Description.setRows(5);
            jScrollPane2.setViewportView(jTextArea_Description);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.weightx = 0.4;
            gridBagConstraints.weighty = 0.4;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
            getContentPane().add(jScrollPane2, gridBagConstraints);

            java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
            jPanel1Layout.columnWidths = new int[] {0, 5, 0};
            jPanel1Layout.rowHeights = new int[] {0};
            jPanel1.setLayout(jPanel1Layout);

            jButton_OK.setText(Lang.getInstance().translate("Ok"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
            jPanel1.add(jButton_OK, gridBagConstraints);

            jButton_Cancel.setText(Lang.getInstance().translate("Cancel"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 2;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            jPanel1.add(jButton_Cancel, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 12;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 10);
            getContentPane().add(jPanel1, gridBagConstraints);

            jLabel_Description.setText(Lang.getInstance().translate("Description"));
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
            gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
            getContentPane().add(jLabel_Description, gridBagConstraints);

            
                       
           
        }// </editor-fold>                        

       
     
        // Variables declaration - do not modify                     
      
        private javax.swing.JButton jButton_Cancel;
        private javax.swing.JButton jButton_OK;
        
        private javax.swing.JLabel jLabel_Description;
        private javax.swing.JLabel jLabel_Name;
        private javax.swing.JLabel jLabel_Title;
       private javax.swing.JPanel jPanel1;
       
        private javax.swing.JScrollPane jScrollPane2;
        
       
        private javax.swing.JTextArea jTextArea_Description;
        private javax.swing.JTextField jTextField_Name;
        public JSONObject ansver;
        // End of variables declaration                   
    }
