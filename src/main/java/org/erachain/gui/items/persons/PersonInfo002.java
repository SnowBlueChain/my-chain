package org.erachain.gui.items.persons;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import org.erachain.core.account.PublicKeyAccount;
import org.erachain.core.crypto.Base58;
import org.erachain.core.item.persons.PersonCls;
import org.erachain.core.item.persons.PersonHuman;
import org.erachain.core.transaction.Transaction;
import org.erachain.datachain.DCSet;
import org.erachain.gui.library.*;
import org.erachain.lang.Lang;
import org.erachain.utils.MenuPopupUtil;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * @author РЎР°С€Р°
 */
public class PersonInfo002 extends javax.swing.JPanel {

    /**
     *
     */
    private static final long serialVersionUID = 1L;
    public StatusesLibraryPanel statuses_Library_Panel;
    public AccountsLibraryPanel accounts_Library_Panel;
    public SignLibraryPanel voush_Library_Panel;
    public PersonOwnerPanel person_Owner_Panel;
    public PersonSignedPanel personSignedPanel;
    /**
     * Creates new form PersonInfo002
     */

    private PersonHuman human;
    private PublicKeyAccount publisher;
    // Variables declaration - do not modify
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_Creator;
    private javax.swing.JLabel jLabel_Date_Born;
    private javax.swing.JLabel jLabel_Description;
    private javax.swing.JLabel jLabel_Gender;
    private javax.swing.JLabel jLabel_Name;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel_Image;
    private javax.swing.JScrollPane jScrollPane1;
    private MTextPane jTextArea_Description;
    private javax.swing.JTextField jTextField1;
    private MAccoutnTextField jTextField_Creator;
    private javax.swing.JTextField jTextField_Date_Born;
    private javax.swing.JTextField jTextField_Gender;
    private javax.swing.JTextField jTextField_Name;
    private javax.swing.JLabel jLabel_Owner;
    private MAccoutnTextField jTextField_Owner;
    private javax.swing.JLabel jLabel_Owner_Sign;
    private javax.swing.JTextField jTextField_Owner_Sign;
    public PersonInfo002(PersonCls person, boolean full) {
        if (person != null) initComponents(person, full);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents(PersonCls person, boolean full) {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel3 = new javax.swing.JPanel();
        jLabel_Name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Name = new javax.swing.JTextField();
        jLabel_Description = new javax.swing.JLabel();
        jLabel_Date_Born = new javax.swing.JLabel();
        jTextField_Date_Born = new javax.swing.JTextField();
        jLabel_Gender = new javax.swing.JLabel();
        jTextField_Gender = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_Description = new MTextPane();
        jLabel_Creator = new javax.swing.JLabel();
//		jTextField_Creator = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel_Image = new javax.swing.JPanel();

        jLabel_Owner = new javax.swing.JLabel();

        //	jTextField_Owner = new javax.swing.JTextField();
        new javax.swing.JTextField();
        jLabel_Owner_Sign = new javax.swing.JLabel();
        jTextField_Owner_Sign = new javax.swing.JTextField();

        PublicKeyAccount owner = null;
        Transaction issue_record;
        byte[] recordReference = person.getReference();
        if (recordReference != null) {
            // если персона взята из буфера и еще не добавлялась то тут НУЛЬ будет
            issue_record = Transaction.findByDBRef(DCSet.getInstance(), recordReference);
            publisher = issue_record.getCreator();
        } else {
            issue_record = null;
            boolean debug = true;
        }

        human = null;
        if (person instanceof PersonHuman) {
            human = (PersonHuman) person;
            if (human.isMustBeSigned()) {
                owner = person.getOwner();
            }
        }

        setMinimumSize(new java.awt.Dimension(100, 100));
        setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());
        JPanel jPanel1 = new javax.swing.JPanel();
        //	 jPanelHead.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());
        JLabel jLabel1N = new JLabel();
        jLabel1N.setText(Lang.T("Name") + ":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 3, 0);
        jPanel1.add(jLabel1N, gridBagConstraints);

        javax.swing.JTextField jTextField1N;
        jTextField1N = new JTextField();
        jTextField1N.setEditable(false);
        jTextField1N.setText(person.viewName());
        MenuPopupUtil.installContextMenu(jTextField1N);
        jTextField1N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NameActionPerformed(evt);
            }
        });


        //   jTextField1N.setMinimumSize(new java.awt.Dimension(120, 20));
        jTextField1N.setName(""); // NOI18N
        //   jTextField1N.setPreferredSize(new java.awt.Dimension(120, 20));
        //    jTextField1N.setRequestFocusEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(8, 4, 3, 0);
        jPanel1.add(jTextField1N, gridBagConstraints);


        JLabel lbl_Block = new JLabel(Lang.T("Block") + ":");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        //  gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        //   gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 3, 8);

        jPanel1.add(lbl_Block, gridBagConstraints);

        if (issue_record != null) {
            JTextField txt_Block = new JTextField(issue_record.viewHeightSeq());

            txt_Block.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 4;
            gridBagConstraints.gridy = 0;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
            gridBagConstraints.weightx = 0.1;
            gridBagConstraints.insets = new java.awt.Insets(8, 8, 3, 8);

            jPanel1.add(txt_Block, gridBagConstraints);
            MenuPopupUtil.installContextMenu(txt_Block);
            txt_Block.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextField_NameActionPerformed(evt);
                }
            });
        }

        MButton btn_Block = new MButton(Lang.T("Deals"), 2.0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 3, 8);

        if (person.isConfirmed()) {
          //  jPanelHead.add(btn_Block, gridBagConstraints);
            btn_Block.addMouseListener(new MouseListener() {

                @Override
                public void mouseClicked(MouseEvent arg0) {
                    // TODO Auto-generated method stub
                    PersonWorkDialog pWD = new PersonWorkDialog(person);

                    pWD.setLocation(arg0.getXOnScreen() - pWD.getWidth(), arg0.getYOnScreen());
                    pWD.setVisible(true);
                }

                @Override
                public void mouseEntered(MouseEvent arg0) {
                    // TODO Auto-generated method stub

                }

                @Override
                public void mouseExited(MouseEvent arg0) {
                    // TODO Auto-generated method stub

                }

                @Override
                public void mousePressed(MouseEvent arg0) {
                    // TODO Auto-generated method stub

                }

                @Override
                public void mouseReleased(MouseEvent arg0) {
                    // TODO Auto-generated method stub

                }

            });
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);

        add(jPanel1, gridBagConstraints);

        jLabel_Name.setText(Lang.T("Name") + ":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        //	add(jLabelName, gridBagConstraints);

        jTextField_Name.setEditable(false);
        jTextField_Name.setText(person.viewName());
        MenuPopupUtil.installContextMenu(jTextField_Name);
        jTextField_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        //	add(jTextField_Name, gridBagConstraints);

        jLabel_Description.setText(Lang.T("Description") + ":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(jLabel_Description, gridBagConstraints);

        //jTextArea_Description.setRows(5);

        MenuPopupUtil.installContextMenu(jTextArea_Description);
        //jTextArea_Description.setEditable(false);
        //jTextArea_Description.setWrapStyleWord(true);
        //jTextArea_Description.setLineWrap(true);


        String descript = Lang.T("Gender") + ":";
        if (person.getGender() == 0) {
            descript = descript + Lang.T("Male");
        } else if (person.getGender() == 1) {
            descript = descript + Lang.T("Female");
        }
        long bi = person.getBirthday();
        long de = person.getDeathday();
        String biStr = person.getBirthdayStr();
        if (!person.isAlive(0l)) { //NTP.getTime())) {
            //descript =descript+"<br>"+ new Date(person.getBirthday()).toString() + " - "+ new Date(person.getDeathday()).toString();
            descript = descript + "<br>" + biStr + " - " + person.getDeathdayStr();

        } else {

            //descript = descript+"<br>" + Lang.T("Birthday") + ":" + new Date(person.getBirthday()) + "";
            descript = descript + "<br>" + Lang.T("Birthday") + ":" + biStr;

        }

        descript = descript + "<br>" + Lang.T("Coordinates of Birth") + ": " + ((Float) person.getBirthLatitude()).toString() + "," + ((Float) person.getBirthLongitude()).toString();
        descript = descript + "<br>" + Lang.T("P.Height") + ": " + person.getHeight();

        descript = descript + "<br>" + Library.to_HTML(person.getDescription());
        jTextArea_Description.setText(descript);

        jScrollPane1.setViewportView(jTextArea_Description);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        // gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        // gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.6;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        int gridy = 8;
        if (human.isMustBeSigned() && owner != null && !owner.equals(publisher)) {

            jLabel_Owner.setText(Lang.T("Data creator") + ":");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = gridy++;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
            jPanel3.add(jLabel_Owner, gridBagConstraints);

            jTextField_Owner = new MAccoutnTextField(owner);
            jTextField_Owner.setEditable(false);
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = gridy++;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.weightx = 0.2;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
            jPanel3.add(jTextField_Owner, gridBagConstraints);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = gridy++;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.weightx = 0.2;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);


            jLabel_Owner_Sign.setText(Lang.T("Owner Sign") + ":");
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = gridy++;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
            //	jPanel3.add(jLabel_Owner_Sign, gridBagConstraints);

            jTextField_Owner_Sign.setEditable(false);

            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = gridy++;
            gridBagConstraints.gridwidth = 3;
            gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
            gridBagConstraints.weightx = 0.2;
            gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);

            jTextField_Owner_Sign.setText(human.isSignatureValid(DCSet.getInstance()) ? Base58.encode(human.getOwnerSignature())
                    : Lang.T("Wrong signaryte for data owner"));
            //	jPanel3.add(jTextField_Owner_Sign, gridBagConstraints);
        }

        jLabel_Creator.setText(Lang.T("Registrar") + ":");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = gridy++;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanel3.add(jLabel_Creator, gridBagConstraints);

        jTextField_Creator = new MAccoutnTextField(publisher);
        jTextField_Creator.setEditable(false);
        //	jTextField_Creator.setText(publisher.toString());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = gridy;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 0);
        jPanel3.add(jTextField_Creator, gridBagConstraints);


        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        // gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 8, 8);
        add(jPanel3, gridBagConstraints);

        // jPanel_Image.setBorder(javax.swing.BorderFactory.createLineBorder(new
        // java.awt.Color(0, 0, 0)));
        jPanel_Image.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        // gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        // gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        // gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 8, 0);
        add(jPanel_Image, gridBagConstraints);

        // jLabel2.setText("jLabel2");
        ImageIcon image = new ImageIcon(person.getImage());
        int x = image.getIconWidth();
        int y = image.getIconHeight();

        int x1 = 250;
        double k = ((double) x / (double) x1);
        y = (int) ((double) y / k);


        if (y != 0) {
            Image Im = image.getImage().getScaledInstance(x1, y, 1);

            jLabel2.setIcon(new ImageIcon(Im));
        }

        jLabel2.addMouseListener(new Image_mouse_Clikl());


        // jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new
        // java.awt.Color(0, 0, 0)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1;
        gridBagConstraints.weighty = 1;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        jPanel_Image.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        // add(jScrollPane2, gridBagConstraints);

        javax.swing.JTabbedPane jTabbedPane1 = new javax.swing.JTabbedPane();

        add(jTabbedPane1, gridBagConstraints);

        // statuses panel

        statuses_Library_Panel = new StatusesLibraryPanel(person);

        jTabbedPane1.add(statuses_Library_Panel);

        // Accounts panel
        accounts_Library_Panel = new AccountsLibraryPanel(person);
        jTabbedPane1.add(accounts_Library_Panel);

        // vouch panel
        voush_Library_Panel = new SignLibraryPanel(issue_record);
        jTabbedPane1.add(voush_Library_Panel);


        // created person panel
        person_Owner_Panel = new PersonOwnerPanel(person);
        jTabbedPane1.add(person_Owner_Panel);
        // vouched person
        personSignedPanel = new PersonSignedPanel(person);
        jTabbedPane1.add(personSignedPanel);

    }// </editor-fold>

    private void jTextField_NameActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    public void delay_on_Close() {
        statuses_Library_Panel.delay_on_close();
        accounts_Library_Panel.delay_on_close();
        voush_Library_Panel.delay_on_close();
        person_Owner_Panel.delay_on_close();
        personSignedPanel.delay_on_close();


    }

    // End of variables declaration
    class Image_mouse_Clikl extends MouseAdapter {
        @Override
        public void mousePressed(MouseEvent e) {
            //		Point p = e.getPoint();
            //		int row = search_Table.rowAtPoint(p);
            if (e.getClickCount() == 2) {
                //			row = personsTable.convertRowIndexToModel(row);
                //			PersonCls person = tableModelPersons.getPerson(row);
                //			new PersonFrame(person);

            }

            //	if(e.getClickCount() == 1 & e.getButton() == e.BUTTON1)
            if (e.getButton() == MouseEvent.BUTTON1) {

		/*
				row = search_Table.convertRowIndexToModel(row);
				PersonCls person = search_Table_Model.getPerson(row);
//выводим меню всплывающее
				if(Controller.getInstance().isItemFavorite(person))
				{
					Search_run_menu.jButton3.setText(Lang.T("Remove Favorite"));
				}
				else
				{
					Search_run_menu.jButton3.setText(Lang.T("Add Favorite"));
				}
	//			alpha = 255;
				alpha_int = 5;
				Search_run_menu.setBackground(new Color(1,204,102,255));
			    Search_run_menu.setLocation(e.getXOnScreen(), e.getYOnScreen());
			    Search_run_menu.repaint();
		        Search_run_menu.setVisible(true);

		    */

            }

        }
    }


}
